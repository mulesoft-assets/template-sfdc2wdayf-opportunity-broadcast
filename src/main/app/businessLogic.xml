<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:wd-connector="http://www.mulesoft.org/schema/mule/wd-connector" 
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" 
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" 
	xmlns:json="http://www.mulesoft.org/schema/mule/json" 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
    xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/wd-revenue http://www.mulesoft.org/schema/mule/wd-revenue/current/mule-wd-revenue.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/wd-connector http://www.mulesoft.org/schema/mule/wd-connector/current/mule-wd-connector.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">

    <batch:job name="syncOpportunitiesBatch" max-failed-records="-1">
        <batch:process-records>
            <batch:step name="findSFDCAccountStep">
                <batch:set-record-variable variableName="sfdcOpportunity" value="#[payload]" doc:name="store SFDC Opportunity"/>

                <enricher source="#[payload]" target="#[recordVars.accountInSFDC]" doc:name="store in 'recordVars.accountInSFDC'">
                    <sfdc:query-single config-ref="Salesforce" query="dsql:SELECT Industry, BillingCity, BillingCountry, BillingPostalCode, BillingState, BillingStreet, Id, Name, Phone, ShippingCity, ShippingCountry, ShippingPostalCode, ShippingState, ShippingStreet FROM Account where Id = '#[payload.AccountId]'" doc:name="query Salesforce Account"/>
                </enricher>
            </batch:step>
            <batch:step name="findWorkdayCustomerStep">
                <enricher source="#[payload]" target="#[recordVars.accountInWD]" doc:name="store in 'recordVars.accountInWD'">
                    <processor-chain doc:name="Processor Chain">
                        <dw:transform-message doc:name="transform Map To GetCustomersRequestType">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Customers_Request: {
		ns0#Request_Criteria: {
			ns0#Customer_Reference_ID: payload.AccountId
		}
	}
}]]></dw:set-payload>
                        </dw:transform-message>
                        <wd-connector:invoke config-ref="Workday__Basic" type="Revenue_Management||Get_Customers" doc:name="GetCustomer"/>

                        <dw:transform-message doc:name="extract data">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 urn:com.workday/bsvc
---
payload.ns0#Get_Customers_Response.*ns0#Response_Data[0].ns0#Customer[0] 
when payload.ns0#Get_Customers_Response.*ns0#Response_Results[0].ns0#Total_Results > 0 
otherwise null
]]></dw:set-payload>
                        </dw:transform-message>



                    </processor-chain>
                </enricher>
            </batch:step>
            <batch:step name="createCustomerStep" >
                <flow-ref name="createCustomerSubflow" doc:name="call createCustomerSubflow"/>
            </batch:step>

            <batch:step name="createWorkdayOpportunityStep"  >
                <flow-ref name="createWorkdayOpportunitySubflow" doc:name="call createOpportunitySubflow"/>                
            </batch:step>

        </batch:process-records>
        <batch:on-complete>
            <json:object-to-json-transformer doc:name="transform BatchJobInstance to JSON"/>
            <logger message="Migration process has finished: #[payload]" level="INFO" doc:name="log 'Migration process has finished'"/>
        </batch:on-complete>
    </batch:job>
    <sub-flow name="createWorkdayOpportunitySubflow">

    	<sfdc:query config-ref="Salesforce" query="SELECT Id,Name,Description,OpportunityId,Quantity,TotalPrice,UnitPrice FROM OpportunityLineItem where OpportunityId = '#[recordVars.sfdcOpportunity.Id]'" doc:name="query Opportunity Lines"/>

        <dw:transform-message doc:name="transform Map to Put Opportunity XML request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 urn:com.workday/bsvc
---
{
	ns0#Put_Opportunity_Request: {
		ns0#Opportunity_Data: {
			ns0#Opportunity_ID: recordVars.sfdcOpportunity.Id,
			ns0#Opportunity_Name: recordVars.sfdcOpportunity.Name,
			ns0#Opportunity_Status_Reference: {
				ns0#ID @(ns0#type: "Opportunity_Status_Code"): "W"
			},
			ns0#Currency_Reference: {
				ns0#ID @(ns0#type: "Currency_ID"): "USD"
			},
			ns0#Customer_Reference: {
				ns0#ID @(ns0#type: "Customer_Reference_ID"): recordVars.sfdcOpportunity.AccountId
			},
			 (payload map  ns0#Opportunity_Line_Replacement_Data: {
					ns0#Product_Description: $.Name,
					ns0#Unit_Cost: $.UnitPrice,
					ns0#Quantity: $.Quantity
				
			})
			
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <wd-connector:invoke config-ref="Workday__Basic" type="Revenue_Management||Put_Opportunity" doc:name="Put Opportunity"/>
        <dw:transform-message doc:name="transform PutOpportunity XML response To Map">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 urn:com.workday/bsvc
---
{
	Id : (payload.ns0#Put_Opportunity_Response.ns0#Opportunity_Reference.*ns0#ID filter ($.@ns0#type == "Opportunity_Reference_ID"))[0],
	Workday_Sync__c : true	
}
]]></dw:set-payload>
        </dw:transform-message>
        <sfdc:update-single config-ref="Salesforce" type="Opportunity" doc:name="update Workday Sync Status"/>

	</sub-flow>

    <sub-flow name="createCustomerSubflow">


        <dw:transform-message doc:name="transform Map to Put Customer XML Request">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 urn:com.workday/bsvc
---
using (sfdcAccount = recordVars.accountInSFDC)
{
	ns0#Put_Customer_Request: {
		ns0#Customer_Data: {
			ns0#Customer_Reference_ID: sfdcAccount.Id,
			ns0#Customer_Name: sfdcAccount.Name,
			ns0#Customer_Category_Reference: {
				ns0#ID @(ns0#type: "Customer_Category_ID"): "CUSTOMER_CATEGORY-5" when (sfdcAccount.Industry == "Technology") 
						otherwise 
					  	("CUSTOMER_CATEGORY-4" when (sfdcAccount.Industry == "Hospitality") otherwise "CUSTOMER_CATEGORY-5")
			},
			ns0#Business_Entity_Data: {
				ns0#Business_Entity_Name: sfdcAccount.Name,
				ns0#Contact_Data: {
					(ns0#Address_Data: {
						ns0#Country_Reference: {
							ns0#ID @(ns0#type: "ISO_3166-1_Alpha-3_Code"): "USA" when (sfdcAccount.BillingCountry == "United States") 
									otherwise 
									("CAN" when (sfdcAccount.BillingCountry == "Canada") otherwise "USA")
						},
						ns0#Address_Line_Data @(ns0#Type: "ADDRESS_LINE_1"): sfdcAccount.BillingStreet,
						ns0#Municipality: sfdcAccount.BillingCity,
						ns0#Country_Region_Reference: {
							ns0#ID @(ns0#type: "Country_Region_ID"): "USA-CA" when (sfdcAccount.BillingState == "CA") otherwise "USA-CA"
						},
						ns0#Postal_Code: sfdcAccount.BillingPostalCode,
						ns0#Usage_Data @(ns0#Public: false): {
							ns0#Type_Data @(ns0#Primary: true): {
								ns0#Type_Reference: {
									ns0#ID @(ns0#type: "Communication_Usage_Type_ID"): "BUSINESS"
								}
							},
							ns0#Use_For_Reference: {
								ns0#ID @(ns0#type: "Communication_Usage_Behavior_ID"): "BILLING"
							}
						}
					}) when (sfdcAccount.BillingState != null and 
								sfdcAccount.BillingCountry != null and  
								sfdcAccount.BillingStreet != null),
					
					(ns0#Address_Data: {	
						ns0#Country_Reference: {
							ns0#ID @(ns0#type: "ISO_3166-1_Alpha-3_Code"): "USA" when (sfdcAccount.ShippingCountry == "United States") 
									otherwise 
									("CAN" when (sfdcAccount.ShippingCountry == "Canada") otherwise "USA")
						},
						ns0#Address_Line_Data @(ns0#Type: "ADDRESS_LINE_1"): sfdcAccount.ShippingStreet,
						ns0#Municipality: sfdcAccount.ShippingCity,
						ns0#Country_Region_Reference: {
							ns0#ID @(ns0#type: "Country_Region_ID"): "USA-CA" when (sfdcAccount.ShippingState == "CA") otherwise "USA-CA"
						},
						ns0#Postal_Code: sfdcAccount.ShippingPostalCode,
						ns0#Usage_Data @(ns0#Public: false): {
							ns0#Type_Data @(ns0#Primary: false): {
								ns0#Type_Reference: {
									ns0#ID @(ns0#type: "Communication_Usage_Type_ID"): "BUSINESS"
								}
							},
							ns0#Use_For_Reference: {
								ns0#ID @(ns0#type: "Communication_Usage_Behavior_ID"): "SHIPPING"
							}
						}
					}) when (sfdcAccount.ShippingState != null and 
								sfdcAccount.ShippingCountry != null and  
								sfdcAccount.ShippingStreet != null)					
				}
			},
			ns0#Currency_Reference: {
				ns0#ID @(ns0#type: "Currency_ID"): "USD" when (sfdcAccount.BillingCountry == "United States") 
					otherwise 
					("CAD" when (sfdcAccount.BillingCountry == "Canada") otherwise "USD")
			}
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <wd-connector:invoke config-ref="Workday__Basic" type="Revenue_Management||Put_Customer" doc:name="Put Customer"/>
        <dw:transform-message doc:name="XML to Java">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>

    </sub-flow>                
	

</mule>

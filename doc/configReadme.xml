<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">Salesforce to Workday Opportunity Broadcast</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
As a Salesforce admin I want to synchronize opportunities at Closed Won stage from a Salesforce Org to a Workday instance.

Instead of a Polling component, this template employs Salesforce Streaming API. The component subscribes to the predefined topic. As a result, it will recieve notifications of changes of Salesforce data in real-time from the server to the client based on a predefined SOQL query.  
		</section>
		<section id="considerations">
<![CDATA[
**Note:** This particular Anypoint Template illustrate the synchronization use case between SalesForce and a Workday.
There are a couple of things you should take into account before running this template:

1. A Workday opportunity requires a reference to a customer. That is why SFDC opportunities without an Account attribute, which is optional there, are filtered.
2. A SFDC Account must have all Address Information data filled out. Furthermore, the template only makes use of following attribute and their values:

	* Country: United States, Canada
	* State: CA
	* Industry: Technology, Hospitality 
	* Postal Code: a valid code from California, e.g. 90210.

Custom mappings need to be extended to cover other values.

3. A SFDC opportunity must have some Products associated.
4. An Opportunity object needs to be extended in Salesforce by a new field called Workday_sync of Checkbox data type. It will store the flag if a record was synchronized by this integration process. 
5. A PushTopic needs to be created so the app is able to get notifications about the opportunities changes in Salesforce. Follow these guidelines:

	1. Select Your Name | Developer Console in Salesforce.
	2. Click Debug | Open Execute Anonymous Window.
	3. In the Enter Apex Code window, paste in the following Apex code, and click Execute.
	
			PushTopic pushTopic = new PushTopic();
			pushTopic.Name = 'ClosedWon';
			pushTopic.Query = 'SELECT AccountId,Amount,CloseDate,Id,LastModifiedDate,Name,OwnerId,StageName FROM Opportunity WHERE IsClosed = true and Workday_Sync__c = false';
			pushTopic.ApiVersion = 33.0;
			pushTopic.NotifyForOperationCreate = true;
			pushTopic.NotifyForOperationUpdate = true;
			pushTopic.NotifyForOperationUndelete = true;
			pushTopic.NotifyForOperationDelete = true;
			pushTopic.NotifyForFields = 'Referenced';
			insert pushTopic;
		
]]>
		</section>	
		<section id="application_configuration">
		<![CDATA[

#### Workday Connector configuration
+ wday.user `user@company`
+ wday.password `secret`
+ wday.endpoint=https://impl-cc.workday.com/ccx/service/company/Human_Resources/v21.1

#### Salesforce Connector
+ sfdc.username `user@company.com`
+ sfdc.password `secret`
+ sfdc.securityToken `h0fcC2Y7dnuH7ELk9BhoW0xu`
+ sfdc.url `https://login.salesforce.com/services/Soap/u/30.0`
]]>
		</section>
		<section id="api_calls">
		<![CDATA[
Application benefits from the Salesforce Streaming API so the number of API calls is reduced by calls that return no data.		
]]>
		</section>
		<section id="default_endpoints_xml">
		<![CDATA[
The flow contains a Salesforce Streaming API component that is notified by Salesforce about the opportunity data changes.
]]>
		</section>
		<section id="default_business_logic_xml">
		<![CDATA[
		The business logic consists of two flows:

1. syncCustomerFlow - responsible for upserting a customer in Workday as it is a required reference for an opportunity in Workday
2. syncOpportunityFlow - responsible for upserting a Workday opportunity and related line items 
]]>
		</section>
		
	</sections>
</configuration>